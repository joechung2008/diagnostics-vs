const fs = require('fs');
const path = require('path');

const projectDir = path.resolve(__dirname, '..');
const distCssPath = path.join(projectDir, 'dist', 'tailwind.css');
const coreRendererDir = path.join(projectDir, '..', 'DiagnosticsVS.Core', 'Rendering');
const outFile = path.join(coreRendererDir, 'HtmlRenderer.g.cs');

if (!fs.existsSync(distCssPath)) {
  console.error('dist/tailwind.css not found. Run `npm run build:css` first.');
  process.exit(2);
}

const css = fs.readFileSync(distCssPath, 'utf8');
// Escape double quotes for verbatim string
const escaped = css.replace(/"/g, '""');

const lines = [];
lines.push('// <auto-generated />');
lines.push('namespace DiagnosticsVS.Core.Rendering');
lines.push('{');
lines.push('    public static partial class HtmlRenderer');
lines.push('    {');
lines.push('        private static string GetTailwindCss() => @"' + '\n');

// Append css lines
css.split(/\r?\n/).forEach(line => {
  lines.push(line.replace(/"/g, '""'));
});

lines.push('";');
lines.push('    }');
lines.push('}');

if (!fs.existsSync(coreRendererDir)) {
  fs.mkdirSync(coreRendererDir, { recursive: true });
}

fs.writeFileSync(outFile, lines.join('\n'), { encoding: 'utf8' });
console.log('Wrote', outFile);
